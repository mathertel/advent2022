<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="favicon.ico" type="image/x-icon" />
  <title>Keep your npm projects healthy</title>
  <meta name="description" content="Keep your npm projects healthy">
  <link Content-Type="text/css" href="./advent2022.css" rel="stylesheet" />
  <script src="./advent2022.js" defer></script>
  <style>
  </style>
</head>

<body>
  <main>
    <a class="back" href="javascript:history.back()"></a>
    <h1>Keep your npm projects healthy</h1>

    <fieldset>
      <legend>Excerpt</legend>
      <p>Never change a running project - or keep it healthy - you choice.</p>
      <p>Here is how to keep projects up to date.</p>
    </fieldset>

    <p>Beside working on JavaScript that will run in the client that you have developped
      by your own you will probably also have from the node.js ecosystem packages for</p>
    <ul>
      <li>Client-side JavaScript code from others</li>
      <li>Server-side JavaScript code from others</li>
      <li>Developper Tools written in JavaScript</li>
    </ul>
    <p>that you have to keep clean and healthy.</p>

    <p>In short:</p>
    <pre><code>npm doctor
npm outdated -g
npm update -g
npm outdated
npm update
npm audit
</code></pre>

    <h2>Check your environment</h2>

    <p>Before you have a look to a specific project it is a good idea to inspect the
      environment health.</p>

    <p>The <code>npm doctor</code> command gives you a quiet good overview on some general
      topics.</p>

    <pre><code><b>&gt;npm doctor</b>

npm WARN verifyCachedFiles Content garbage-collected: 156 (170728794 bytes)
npm WARN verifyCachedFiles Cache issues have been fixed
Check                    Value   Recommendation/Notes
npm ping                 <span style="color:green">ok</span>
npm -v                   <span style="color:red">not ok</span>  Use npm v9.1.2
node -v                  <span style="color:red">not ok</span>  Use node v18.12.1 (current: v16.13.2)
npm config get registry  <span style="color:green">ok</span>      using default registry (https://registry.npmjs.org/)
which git                <span style="color:green">ok</span>      C:\Program Files\Git\cmd\git.EXE
Verify cache contents    <span style="color:green">ok</span>      verified 4761 tarballs
npm ERR! Some problems found. See above for recommendations.

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\Matthias\AppData\Local\npm-cache\_logs\2022-...Z-debug-0.log
</code></pre>

    <p>Keeping the cache in a clean state is done by checking and fixing the cache folder.
      You can also run <code>npm cache verify</code> individually.</p>

    <p>If you have persistant problems it is recommended on the <code>npm help cache</code> documentation
      to eventually run <code>npm cache clean -f</code> to force a clean cache.</p>

    <p>The not ok lines marked in red are hints to eventually update the npm package and node.js itself.</p>

    <p>In CI/CD pipelines this command should be present as a hint for possible problems in the runner package.</p>


    <h2>Check for outdated global packages</h2>

    <p>To list all globally installed packages use the command <code>npm list -g</code>.</p>

    <pre><code><b>&gt;npm list -g</b>

C:\Users\Matthias\AppData\Roaming\npm
├── eslint@7.2.0
├── markdown-link-check@3.10.3
├── mkcert@1.5.1
├── npm@8.18.0
├── sass@1.56.1
├── tslab@1.0.15
└── typescript@4.9.3
</code></pre>

    <p>Another place to look for problems are the globally installed packages and find out about new versions
      using the <code>npm outdated -g</code> command.</p>

    <pre><code><b>&gt;npm outdated -g</b>

Package  Current  Wanted  Latest  Location             Depended by
eslint    8.28.0  8.29.0  8.29.0  node_modules/eslint  global
npm       8.18.0   9.1.3   9.1.3  node_modules/npm     global
</code></pre>

    <p>Here the outdated libraries are shown and you can update then by running<br />
      <code>npm update -g</code> to upgrade to the Wanted version.
    </p>
    <p>In case you like to switch to the latest version use <code>npm update -g</code></p>.


    <h2>Check for outdated project packages</h2>

    <pre><code><b>&gt;npm outdated</b>
Package    Current   Wanted   Latest  Location                Depended by
eslint      8.28.0   8.29.0   8.29.0  node_modules/eslint     project
stylelint  14.15.0  14.16.0  14.16.0  node_modules/stylelint  project
terser      5.16.0   5.16.1   5.16.1  node_modules/terser     project
</code></pre>

    <p>Same as with the global installed packages. I am used to include it in the test task like in <code>package.json</code>:</p>

    <pre><code>"test": "npm outdated && npm run test:ts && npm run test:server && npm run test:css"</code></pre>


    <h2>Check for known vulnerabilities</h2>

    <p>The npm package system also includes some hints on known audit issues in packages you have installed.</p>

    <p>Using the command <code>npm audit</code> all dependencies are scanned for known vulnerabilities. Hopefully you get:</p>

    <pre><code><b> &gt;npm audit</b>
  found 0 vulnerabilities</code></pre>

    <p>But it may happen:</p>


    <pre><code><b> &gt;npm audit</b>

  # npm audit report

  qs  &lt;6.2.4
  Severity: <span style="color:red">high</span>
  qs vulnerable to Prototype Pollution - https://github.com/advisories/GHSA-hrpp-h998-j3pp
  fix available via `npm audit fix --force`
  Will install @11ty/eleventy@0.3.3, which is a breaking change
  node_modules/qs
    browser-sync  >=2.12.1
    Depends on vulnerable versions of qs
    node_modules/browser-sync
      @11ty/eleventy  0.3.4 - 1.0.2
      Depends on vulnerable versions of browser-sync
      node_modules/@11ty/eleventy
  
  3 high severity vulnerabilities
  
  To address all issues (including breaking changes), run:
    npm audit fix --force</code></pre>

    <p>Usually this is a temporary problem as the maintainers of the packages will be informed about
      audit issues as well and will likely fix them in a short time. So <code>npm update</code> will help.</p>

    <ul>
      <li>The provided link will guide you to the GitHub Advisory Database where you find details.</li>
      <li>Here you will find the problem reference material like
        <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24999">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a>
        provided link will guide you to the GitHub Advisory Database where you find details.
      </li>
      <li>The dependency tree can be seen here:<br />
        <code>@11ty/eleventy</code> ==&gt; <code>browser-sync</code> ==&gt; <code>qs</code>
      </li>
      <li><code>npm audit fix</code> will possibly downgrade some package versions - unwanted side effects like loosing functionality may happen</li>
      <li><code>npm v qs</code> shows you details about the package and you can see when there are new versions available.</li>
      <li>This is tricky.</li>
    </ul>

    <h2>Do you have a CI/CD pipeline ?</h2>


    <h2>See Also</h2>

    <ul>
      <li><a href="https://devhints.io/npm">https://devhints.io/npm</a></li>
      <li><a href="https://docs.npmjs.com/cli/v6/commands">https://docs.npmjs.com/cli/v6/commands</a></li>
    </ul>

    <h2>Tags</h2>
    <div class="taglist">
      <a href="tag-nodejs.htm">NodeJS</a>
    </div>
  </main>
  <script>
  </script>
</body>

</html>